//! ToDo refacotoring required

@precedence { first @left, last @left, card, att}

@top Tree { featuresSection constraintsSection? }

featuresSection {identifier lineEnd featureBlock }

AbstractItem { !first Feature abstract }

//!Cardinality block (Level 1)
Cardinality {!last "cardinality " "[" Min ".." Max "]"}
Min {number}
Max {number}
//!Cardinality block End

//! Arithmetic block (Level 2)
Attribute { identifier | string }
AttributeItem {!first "{" list<AttributeSelection> "}"}
AttributeSelection { (Attribute AttributeValue) | (Attribute "'" identifier "'")}
AttributeValue { number }
Operation { sum | avg }
sum {"sum" "(" Attribute ")"}
avg { "avg" "(" Attribute ")"}
Operator { "+" | "-" | "*" | "/" | "==" | ">" | ">=" }
//! Arithmetic block End

Feature { !last (identifier | string) Cardinality? AttributeItem?}
Type { "Integer" | "String" | "Real" | "Boolean"}
TypeFeature { Type Feature }

//!check if ReqExp is still required after Level 3
ReqExp { !last (identifier | string) }
list<item> { item ("," item)* }

AbstractFeature { !last AbstractItem lineEnd stateBlock+}

abstract {"{abstract}"}

State{
  ("mandatory"
   | "optional"
   | "alternative"
   | "or")
}

constraintsSection {
    "constraints" lineEnd constraintsBlock+
}

ConstraintSign {
  "|" | "=>" | "&"
}

ConstraintsItem {
  Neg? Feature
}
Neg {
  "!"
}
Brackets {
 Neg? OpenBracket Constraints CloseBracket
}
OpenBracket {
  "("
}
CloseBracket {
  ")"
}

Constraints {
  (!last Operation Operator number (ConstraintSign ConstraintsItem)?) |
  (!last ConstraintsItem ConstraintSign ConstraintsItem) |
  (!first ConstraintsItem ConstraintSign Constraints) |
  (!first Constraints ConstraintSign ConstraintsItem) |
  (!first Constraints ConstraintSign Constraints) |
  (Brackets)
}

//!block

stateBlock { indent  (State lineEnd featureBlock)+ (dedent | eof) }
featureBlock { indent ((TypeFeature | Feature) lineEnd | AbstractFeature)+ (dedent | eof) }
constraintsBlock {indent (Constraints lineEnd)+ (dedent | eof)}

//!skip

@skip {
  spaces |
  Comment |
  blankLineStart (spaces | Comment)* lineEnd
}

//!lineEnd

lineEnd { newline | eof }

//!context

@context trackIndent from "./tokens.js"

//!externalTokens

@external tokens indentation from "./tokens.js" {
  indent
  dedent
  blankLineStart
}

//!tokens

@tokens {
  @precedence {"mandatory", "optional", "alternative", "or", "constraints", "cardinality ","sum", "avg", "Integer", "Real","String", "Boolean", number, identifier}
  spaces { $[ \t]+ }
  newline { "\n" }
  eof { @eof }
  Comment { "#" ![\n]+ }
  string { '"' (!["\\] | "\\" _)* '"' }
  identifier { $[a-zA-Z0-9_]+ }
  number { $[0-9]+ }
}